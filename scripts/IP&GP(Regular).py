import matplotlib.pyplot as plt


def draw_box(data, colors, position, interval=0.3, width=0.2):
    # 绘制箱型图
    # patch_artist=True-->箱型可以更换颜色，positions-->将同一组的三个箱间隔设置为interval，widths-->每个箱宽度
    bplot = plt.boxplot(data, patch_artist=True, labels=labels, positions=(position, position + interval), widths=width,
                        medianprops=dict(color='r', linewidth=1),
                        showmeans=True, meanline=True, meanprops=dict(color='black', linestyle='--', linewidth=1)
                        )
    # 将三个箱分别上色
    for patch, color in zip(bplot['boxes'], colors):
        patch.set_facecolor(color)
    return bplot

data1 = [
    [0.810811, 0.941176, 1, 0.90625, 0.935484, 0.833333, 0.771429, 0.709677, 0.694444, 0.580645, 0.694444, 0.911765, 0.861111, 0.685185, 0.730769, 0.875],
    [0.621622, 0.764706, 0.634615, 0.59375, 0.645161, 0.375, 0.714286, 0.419355, 0.416667, 0.387097, 0.555556, 0.647059, 0.416667, 0.444444, 0.461538, 0.625, 0.545157688]]
# data2 是F1 score中三个箱型图的参数
data2 = [
    [0.864865, 1, 1, 1, 0.935484, 0.916667, 0.8, 0.774194, 0.666667, 0.677419, 0.888889, 0.970588, 0.944444, 0.555556, 0.769231, 0.9375],
    [0.648649, 0.764706, 0.711538, 0.75, 0.709677, 0.416667, 0.714286, 0.483871, 0.472222, 0.548387, 0.75, 0.676471, 0.472222, 0.37037, 0.538462, 0.6875, 0.60718925]]
# data3 是IoU中三个箱型图的参数
data3 = [
    [0.837838, 1, 0.980769, 0.96875, 0.903226, 0.916667, 0.857143, 0.774194, 0.611111, 0.580645, 0.888889, 1, 0.972222, 0.592593, 0.807692, 0.96875],
    [0.675676, 0.794118, 0.730769, 0.71875, 0.645161, 0.625, 0.8, 0.548387, 0.472222, 0.580645, 0.833333, 0.764706, 0.527778, 0.333333, 0.576923, 0.65625, 0.642690688]]
data4 = [
    [0.918919, 1, 0.903846, 0.96875, 0.935484, 0.916667, 0.8, 0.806452, 0.694444, 0.483871, 0.888889, 1, 0.944444, 0.407407, 0.692308, 0.96875],
    [0.891892, 0.764706, 0.615385, 0.75, 0.709677, 0.708333, 0.771429, 0.612903, 0.527778, 0.451613, 0.861111, 0.764706, 0.555556, 0.277778, 0.538462, 0.625, 0.651645563]]
data5 = [
    [0.810811, 0.970588, 0.903846, 0.90625, 0.870968, 0.875, 0.714286, 0.612903, 0.527778, 0.354839, 0.888889, 1, 0.916667, 0.388889, 0.615385, 0.9375],
    [0.810811, 0.823529, 0.596154, 0.625, 0.580645, 0.75, 0.685714, 0.483871, 0.388889, 0.290323, 0.888889, 0.764706, 0.555556, 0.222222, 0.423077, 0.5625, 0.590742875]]
data6 = [
    [0.756757, 0.970588, 0.846154, 0.78125, 0.870968, 0.875, 0.657143, 0.645161, 0.472222, 0.258065, 0.861111, 1, 0.916667, 0.314815, 0.5, 0.90625],
    [0.756757, 0.794118, 0.519231, 0.53125, 0.612903, 0.75, 0.657143, 0.516129, 0.333333, 0.193548, 0.805556, 0.735294, 0.555556, 0.203704, 0.384615, 0.40625, 0.547211688]]
# data7 = [
#     [0.918919, 1.000000, 0.903846, 0.968750, 0.935484, 0.916667, 0.800000, 0.806452, 0.694444, 0.483871, 0.888889, 1.000000, 0.944444, 0.407407, 0.692308, 0.968750],
#     [0.891892, 0.764706, 0.615385, 0.750000, 0.709677, 0.708333, 0.771429, 0.612903, 0.527778, 0.451613, 0.861111, 0.764706, 0.555556, 0.277778, 0.538462, 0.625000]]
# 箱型图名称
labels = ["IP", "GP"]
# 箱型图的颜色 RGB （均为0~1的数据）
colors = [(255/255., 190/255., 122/255.), (130/255., 176/255., 210/255.)]

interval = 0.25
width = 0.2
bplot1 = draw_box(data1, colors, position=1, interval=interval, width=width)
bplot2 = draw_box(data2, colors, position=2, interval=interval, width=width)
bplot3 = draw_box(data3, colors, position=3, interval=interval, width=width)
bplot4 = draw_box(data4, colors, position=4, interval=interval, width=width)
bplot5 = draw_box(data5, colors, position=5, interval=interval, width=width)
bplot6 = draw_box(data6, colors, position=6, interval=interval, width=width)
# bplot7 = draw_box(data7, colors, position=7, interval=interval, width=width)

x_position = [1, 2, 3, 4, 5, 6]
x_position_fmt = ['0.5', '0.6', '0.7', '0.8', '0.9', '1.0']
plt.xticks([i + interval / 2 for i in x_position], x_position_fmt)

plt.xlabel('Regular threshold')
plt.ylabel('Probability')
plt.grid(linestyle="--", alpha=0.3)  # 绘制图中虚线 透明度0.3
plt.legend(bplot1['boxes'], labels, loc='lower left')  # 绘制表示框，右下角绘制
plt.savefig(fname="pic.png", figsize=[10, 10])
plt.show()

